apply plugin: "maven-publish"
apply plugin: "signing"

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure Kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // The coordinates of the library, being set from variables that
                // we'll set up later
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                // Two artifacts, the `aar` (or `jar`) and the sources
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar
                // TODO: Support javadocJar
                // artifact javadocJar

                // Mostly self-explanatory metadata
                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = "An implement of ProgressHUD for Android, similar to MBProgressHUD, SVProgressHUD for iOS."
                    url = "https://github.com/rupinderjeet/KProgressHUD"
                    licenses {
                        license {
                            name = "The Apache Software License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            id = "rupinderjeet"
                            name = "Rupinderjeet Singh Hans"
                            email = "rupinderjeet47@gmail.com"
                        }
                        developer {
                            id = "kaopiz"
                            name = "Kaopiz Software Co., Ltd."
                            email = "contact@kaopiz.com"
                        }
                    }

                    // Version control info - if you're using GitHub, follow the
                    // format as seen here
                    scm {
                        connection = "scm:git:github.com/rupinderjeet/KProgressHUD.git"
                        developerConnection = "scm:git:ssh://github.com/rupinderjeet/KProgressHUD.git"
                        url = "https://github.com/rupinderjeet/KProgressHUD/tree/main"
                    }
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            rootProject.ext["signing.keyId"],
            rootProject.ext["signing.key"],
            rootProject.ext["signing.password"],
    )
    sign publishing.publications
}